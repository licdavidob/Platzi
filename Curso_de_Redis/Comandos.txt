+ redis-server: Comando para iniciar el servidor de Redis.

+ redis-cli: Comando para iniciar la consola de Redis.
    * -h <host> -p <port>: Conexión a un servidor Redis en un host y puerto específicos.
    * -a <password>: Autenticación con una contraseña.

+ ping: Comando para verificar la conexión con el servidor Redis.

+ flusdb: Comando para limpiar la base de datos actual.

--- Strings ---

+ set <key> <value>: Comando para establecer un valor en una clave.
    * Ejemplo: set nombre "Juan"

+ get <key>: Comando para obtener el valor de una clave.
    * Ejemplo: get nombre
    * Respuesta: "Juan"

--- Hashes ---

+ hmset <key> <field1> <value1> <field2> <value2>: Comando para establecer múltiples pares clave-valor en un hash.
    * Ejemplo: HMSET usuario:1 nombre "Juan" apelido "Pérez" edad 30

+ hmget <key> <field1> <field2>: Comando para obtener múltiples valores de un hash.
    * Ejemplo: HMGET usuario:1 nombre apelido
    * Respuesta: "Juan" "Pérez"

+ hgetall <key>: Comando para obtener todos los pares clave-valor de un hash.
    * Ejemplo: HGETALL usuario:1
    * Respuesta: "nombre" "Juan" "apelido" "Pérez" "edad" 30

--- Lists ---

+ lpush <key> <value>: Comando para agregar un valor al inicio de una lista.
    
    * Ejemplo: lpush nombres "Juan" "Pedro" "María"
    * Respuesta: 3 (Indica que hay 3 elementos en la lista)
    
    *Ejemplo: lpush nombres "Ana"
    * Respuesta: 4 (Indica que hay 4 elementos en la lista)

+ rpush <key> <value>: Comando para agregar un valor al final de una lista.
    * Ejemplo: rpush nombres "Luis"
    * Respuesta: 5 (Indica que hay 5 elementos en la lista)
    
+ lrange <key> <start> <stop>: Comando para obtener un rango de valores de una lista.
    
    * Ejemplo: lrange nombres 0 -1 (Obtener todos los valores)
    * Respuesta: "Juan" "Pedro" "María"
    
    * Ejemplo: lrange nombres 0 1 (Obtener los dos primeros valores)
    * Respuesta: "Juan" "Pedro"

--- Sets ---

+ sadd <key> <value>: Comando para agregar un valor a un set.
    * Ejemplo: sadd colores "rojo" "verde" "azul"
    * Respuesta: 3 (Indica que hay 3 elementos en el set)

    * Ejemplo: sadd colores "amarillo"
    * Respuesta: 1 (Indica que se agregó un nuevo elemento al set)

+ smembers <key>: Comando para obtener todos los valores de un set.
    * Ejemplo: smembers colores
    * Respuesta: "rojo" "verde" "azul" "amarillo"

+ srem <key> <value>: Comando para eliminar un valor de un set.
    * Ejemplo: srem colores "verde"
    * Respuesta: 1 (Indica que se eliminó un elemento del set)
    
    * Ejemplo: srem colores "morado"
    * Respuesta: 0 (Indica que no se encontró el elemento en el set)

--- Sorted Sets ---

+ zadd <key> <score1> <value1> <score2> <value2>: Comando para agregar un valor a un sorted set con un puntaje.
    * Ejemplo: zadd puntuaciones 100 "Juan" 200 "Pedro"
    * Respuesta: 2 (Indica que se agregaron 2 elementos al sorted set)

+ zrange <key> <start> <stop>: Comando para obtener un rango de valores de un sorted set.
    * Ejemplo: zrange puntuaciones 0 -1 (Obtener todos los valores)
    * Respuesta: "Juan" "Pedro"
    
    * Ejemplo: zrange puntuaciones 0 0 (Obtener el primer valor)
    * Respuesta: "Juan"

+ zscore <key> <value>: Comando para obtener el puntaje de un valor en un sorted set.
    * Ejemplo: zscore puntuaciones "Juan"
    * Respuesta: 100
    
    * Ejemplo: zscore puntuaciones "Pedro"
    * Respuesta: 200

+ zrangebyscore <key> <min> <max>: Comando para obtener un rango de valores de un sorted set por puntaje.
    * Ejemplo: zrangebyscore puntuaciones 0 150
    * Respuesta: "Juan"
    
    * Ejemplo: zrangebyscore puntuaciones 150 250
    * Respuesta: "Pedro"

--- Keys ---

+ set <key> <value>: Comando para establecer un valor en una clave.
    * Ejemplo: set nombre "Juan"

+ del <key>: Comando para eliminar una clave.
    * Ejemplo: del nombre
    * Respuesta: 1 (Indica que se eliminó la clave)
    * Respuesta: 0 (Indica que no se encontró la clave)

+ dump <key>: Comando para obtener la representación serializada de una clave.
    * Ejemplo: dump nombre
    * Respuesta: "\x..." (Serializar significa que se convierte a un formato específico)

+ exists <key>: Comando para verificar si una o más claves existen.
    * Ejemplo: exists nombre
    * Respuesta: 1 (Indica que la clave existe)
    
    * Ejemplo: exists edad
    * Respuesta: 0 (Indica que la clave no existe)

+ expire <key> <seconds>: Comando para establecer un tiempo de expiración en una clave en segundos.
    * Ejemplo: expire nombre 60 (La clave "nombre" expirará en 60 segundos)
    * Respuesta: 1 (Indica que se estableció el tiempo de expiración)
    
    * Ejemplo: expire edad 30
    * Respuesta: 0 (Indica que la clave no existe o ya tiene un tiempo de expiración)

+ expireat <key> <timestamp>: Comando para establecer una fecha de expiración en una clave.
    * Ejemplo: expireat nombre 1672531199 (La clave "nombre" expirará en la fecha y hora especificadas)
        - 1672531199 es un timestamp Unix que representa el 1 de enero de 2023 a las 00:00:00 UTC.
    * Respuesta: 1 (Indica que se estableció la fecha de expiración)

+ pexpire <key> <milliseconds>: Comando para establecer un tiempo de expiración en una clave en milisegundos.
    * Ejemplo: pexpire nombre 60000 (La clave "nombre" expirará en 60 segundos)
    * Respuesta: 1 (Indica que se estableció el tiempo de expiración)

+ keys <pattern>: Comando para obtener todas las claves que coinciden con un patrón.
    * Ejemplo: keys *
    * Respuesta: "nombre" "usuario:1" "nombres" "colores" "puntuaciones"
    
    * Ejemplo: keys nom*
    * Respuesta: "nombre" "nombres"

    * Ejemplo: keys *ones
    * Respuesta: "puntuaciones"

+ persist <key>: Comando para eliminar el tiempo de expiración de una clave.
    * Ejemplo: persist nombre (Elimina el tiempo de expiración de la clave "nombre")
    * Respuesta: 1 (Indica que se eliminó el tiempo de expiración)
    
    * Ejemplo: persist edad
    * Respuesta: 0 (Indica que la clave no existe o no tiene un tiempo de expiración)

+ pttl <key>: Comando para obtener el tiempo de vida restante de una clave en milisegundos.
    * Ejemplo: pttl nombre
    * Respuesta: 50000 (Indica que quedan 50 segundos para que expire la clave "nombre")
    
    * Ejemplo: pttl edad
    * Respuesta: -2 (Indica que la clave no existe o ya ha expirado)

+ ttl <key>: Comando para obtener el tiempo de vida restante de una clave en segundos.
    * Ejemplo: ttl nombre
    * Respuesta: 50 (Indica que quedan 50 segundos para que expire la clave "nombre")

+ rename <oldkey> <newkey>: Comando para renombrar una clave.
    * Ejemplo: rename nombre nombre_completo
    * Respuesta: OK (Indica que se renombró la clave)

+ type <key>: Comando para obtener el tipo de dato de una clave.
    * Ejemplo: type nombre
    * Respuesta: string (Indica que la clave "nombre" es de tipo string)
    