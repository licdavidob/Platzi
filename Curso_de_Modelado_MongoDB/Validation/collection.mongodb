use("platzi_store");

db.users.drop();
db.products.drop();

// Crea una nueva colección llamada "users" con un esquema de validación.
db.createCollection("users", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["email", "password", "role"],
      properties: {
        name: {
          bsonType: "string",
          description: "must be a string and is required",
        },
        email: {
          bsonType: "string",
          description: "must be a string and is required",
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$", //Validar formato de email
        },
        password: {
          bsonType: "string",
          description: "must be a string",
        },
        age: {
          bsonType: "int",
          minimum: 18,
          maximum: 99,
        },
        isSingle: {
          bsonType: "bool",
        },
        role: {
          enum: ["admin", "user", "guest"],
        },
        created_at: {
          bsonType: "date",
        },
        updated_at: {
          bsonType: "date",
        },
      },
    },
  },
});

// Crea una nueva colección llamada "products" (validar array y objetos anidados).
db.createCollection("products", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["name", "price", "category"],
      properties: {
        name: {
          bsonType: "string",
          description: "must be a string and is required",
        },
        price: {
          bsonType: "decimal",
          description: "must be a decimal and is required",
        },
        sizes: {
          //Validar array
          bsonType: "array",
          minItems: 1, //Validar que el array tenga al menos un elemento
          uniqueItems: true, //Validar que no se repitan los elementos del array
          items: {
            bsonType: "string",
          },
        },
        category: {
          //Validar objeto anidado
          bsonType: "object",
          required: ["name", "description"],
          properties: {
            name: {
              bsonType: "string",
              description: "must be a string and is required",
            },
            description: {
              bsonType: "string",
              description: "must be a string and is required",
            },
          },
        },
      },
    },
  },
});
