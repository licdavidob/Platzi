----------- ¿Qué es el cómputo en la nube? -----------

Modelo de entrega de servicios de computación a través de internet.
Para que un servicio sea considerado de cómputo en la nube, debe cumplir con cinco características fundamentales:

* Auto servicio y bajo demanda: No se requiere intervención humana para acceder a los recursos.
* Conectado a internet.
* Economías de escala: El proveedor comparte los recursos entre todos los clientes.
* Elasticidad: Obtener recursos según sea lo necesario.
* Servicio medido: Paga sólo lo que consumes.

Puede verse como una computadora enorme de acceso global.


----------- Partes del Data Center -----------

Suelen estar cerca del agua ya que son necesarios para enfriar todos los dispositivos.

* Networking Room: Aquí se conectan los clusters de Jupiter con el resto de
Google Cloud a tráves de la red backbone de Google.

* Jupiter Network Equipment: Equipo (software y hardware) desarrollado por Google, para conectar todos los
servidores de los data centers, para que sean casi uno solo.

* Maglev Load Balancers: Son Load Balancers Globales. Equilibran la carga a Google Compute Engine,
para que así atender un millón de solicitudes por segundo sin pre-warming.

*Custom Chips:

 ** Titan: Microcontrolador seguro de bajo consumo diseñado teniendo en cuenta los requisitos y escenarios de
 seguridad de hardware de Google.

 ** Cloud TPUs: Chip diseñado para acelerar las cargas de trabajo de aprendizaje automático con TensorFlow.

* Water Pipes: Agua fría que corre desde la planta de enfriamiento hasta el centro de datos, donde se utiliza
para extraer calor del interior de las hot huts. Luego, el agua tibia se devuelve a la planta de enfriamiento
donde se elimina el calor residual y el agua regresa al centro de datos.

* HotHut: Sistemas de enfriamiento personalizados para los racks de servidores de Google. Sirven como hogares
temporales para el aire caliente que sale de nuestros servidores, aislándolo del resto del piso del centro de datos.

* Cooling Plant: En los centros de datos de Google, se usa el "enfriamiento gratuito" que proporciona el clima a
través de un sistema de agua. Es decir, la planta de enfriamiento recibe agua caliente del centro de datos y agua
fría de las torres de enfriamiento, el calor se transfiere del agua caliente al agua fría. El agua enfriada regresa
al piso del centro de datos para extraer más calor del equipo allí, y el agua caliente fluye hacia las torres de
enfriamiento para ser enfriada.


----------- Historia del cómputo en la nube -----------

* Era de las máquinas virtuales (VM): Empieza la nube, las startups se dan cuenta que no es necesario comprar
toda la infraestructura, que hasta ese entonces era necesaria y que podían aprovechar la "nube".

* Era de la infraestructura en la nube: Muchas empresas tradicionales se dan cuenta del potencial de la nube.

* Era de la nube transformacional:

 ** La nube mas limpia / Sustentabilidad.
 ** Te ahorra dinero.
 ** Facil de usar y se optimiza automaticamente.
 ** Soluciones de industria a la medida.


----------- Opciones de computo en Google Cloud Platform -----------
----------- (Imagen Disponible) -----------

* Compute Engine: 

 ** Virtual Machines.
 ** Bear Metal (servidores completos por el tea de licenciamiento especial).

* Google Kubernetes Engine (GKE): Orquestrar diferentes tipos de contenedores.

-- A partir de aqui entra 'Serverless' lo que indica que te preocupas más por tu app y menos por la admin. del servidor --

* App Engine: Para correr aplicaciones web, generalmente para frameworks.

* Cloud Run: Lo mismo que 'App Engine' pero enfocado en contenedores.

* Cloud Function: Únicamente te enfocas en la app.

* Firebase: Se conoce como Back-end as a Service. Sólo te enfocas en el front.


----------- Cómputo Serverless -----------

Desarrolla, implementa y escala aplicaciones de forma rapida y segura en un entorno totalmente gestionado.

Beneficios:

* Auto Escalado: El sistema jamás se va a caer.
* Completamente Administrado: Tu no te preocupas por máquinas.
* Speed to Market: Te permite llegar rápidamente al mercado.


----------- Regiones y zonas -----------

Región: Es una zona geográfica que esta conformada por varias zonas.
Zona: Separadas de otras por una distancía y dentro de una región, son edificios con data center.

Las regiones y zonas solucionan el problema de tener alta disponibilidad y latencia, contra incidencias naturales o de configuración.


----------- API Abiertas -----------

Nube Híbrida: Composición de 2 omás nubes (privadas, comunitarias o públicas). Ofrecen beneficios de múltiples modelos de implementación.
- Existen diversas alternativas de software que nos apoya con esta flexibilidad, ya que aprender todas las nubes suele ser complicado.

Puedes tener diversos servicios de tu aplicación corriendo en diferentes nuebes.

* Anthos: Es un servicio de Google Cloud y permite unificar la Google Cloud con otras nubes, inclusive con locales.

* Big Query: Aprovecha la infraestructura de diversas nubes y nos permite agregar datos en diferentes data center de diversos servicios.

1. Mandamos query en SQL.
2. Punto de presencia: entra a la red de Google.
3. Llegar al DataCenter más cercano, viajando por la private fiber network de Google.
4. La query se encamina a un cluster dentro del data center. Podemos tener anchos de banda muy potentes como 1 petabyte por segundo de datos.
5. Un nodo ejecutador convierte nuestra query en un plan ejecutador; es decir, divide nuestra query en pedacitos para procesarlos de manera paralela.
6. Escogen máquinas que ejecutarán nuestros pedacitos de query de forma paralela.
7. El resultado se junta y se regresa al usuario.



----------- Beneficios Google Cloud vs Competencia -----------

----------- (Imagen Disponible) -----------
* IaaS: Infraestructura como servicios. Switches, máquinas, cables de red que puedes necesitar.

* PaaS: Plataforma como servicio. Servicios adicionales para no administrar otras funciones salvo la de desarrollar la app.

* SaaS: Software como servicio. Platzi. Google Docs, drive, meet, etc.


El modelo de la Google Cloud esta hecha específicamente para desarrolladores.

* Inteligente:
    -Inteligencia artificial, aprendizaje automático y análisis avanzados.
    -Automatizar procesos, realizar predicciones.

* Abierta y Flexible:
    -Utilizar datos cuando y donde quiera.
    -Crear y modernizar aplicaciones en cualquier lugar.
    -Proteger tu negocio del lock-in (Poder utilizar diversas alternativas en la nube)

* Colaboración y Productividad:
    -Workspace proporciona herramientas digitales para que tu negocio prospere.
    -Trabajadores se mantienen conectados y las empresas crean nuevas experiencias.
    -Trabajar desde cualquier lado.

* Seguridad:
    -Los datos se almacenan, procesan y protegen en la misma infraestructura.
    -Cifra los datos en reposo. ()
    -Los datos no se transfieren en redes públicas.

* Sustentable:
    -Compra de energia renovable.
    -Costos más baratos por aprovechamiento de energía.

* Ahorro Costos:
    -Aumentar la eficiencia operativa y optimizar costos en TI.
    -La migración de aplicaciones a Google Cloud puede ahorrar hasta un 32%. 

* Fácil de usar:
    -Fácil de utilizar y se optimiza automáticamente.
    -Desarrollada por desarrolladores para desarrolladores.
    -Implementar fácilmente servicios de la nube a gran escala.

* Soluciones de Industria:
    -Crear soluciones personalizadas para abordar sus mayores desafios.
    -Reducir costos y capturar nuevas oportunidades de mercado.


----------- Seguridad de el Cloud Computing -----------

- Según el modelo de seguridad por el que hayas optado (IaaS, PaaS, SaaS) es el nivel de seguridad que tendras.

- Seguridad de extremo a extremo:
    - Imagenes Bases Seguridad.
    - Analisis de Vulnerabilidades (De las dependencias que tenemos en las imagenes).
    - Autorizacion binaria.
    - Contenedores Escudados.
    - Sandbox de Contenedores.
    - Deteccion de amenazas a contenedores.

- Estandares, regulaciones y certificaciones:
    - Identidades seguras criptograficamente
    - Identidad del usuario
    - Identidad del Dispositivo
    - Identidad de la maquina
    - Identidad del Servicio
    - Identidad del codigo


----------- Presupuestos y Facturación -----------

---------- (Imagen Disponible) -----------
- Son el vehículo de pago para tus gastos en Google CLoud.
    - Payments Profile: Métodos de pago con los que cuento.
    - Billing Account:
        + Negociación con Google.
        + Llega como una solicitud de pago.
        + Puedes relacionarlo con varios proyectos.

---------- (Imagen Disponible) -----------
-Jerarquia de recursos:
    - Su función es la de mapear como se distribuye el software.
    - La jerarquia general es:
        + Organización.
        + Carpetas (Opcional).
        + Proyecto.
        + Recursos: Servicios ofrecidos por GCP que se pueden crear o utilizar.

    - Buenas prácticas:
        + Crear tu payment profile y asocialarlo a tu Billing Account.
        + Dividir en diversos proyectos y no tener todos tus servicios en uno solo.
        + En cada proyecto, mantener sólo lo que necesitas.
        + SI divides tu app o servicios en diferentes proyectos, puedes saber con mayor control, cuánto te cuesta cada cosa.
        + Exportar tus datos de facturación a Big Query.



---------- Jerarquía de Recursos -----------

- Puede entenderse como un sistema de archivos.
- En Google Cloud, TODO es un recurso:
    * Una máquina virtual.
    * Un contenedor.
    * Un disco duro.
    * Un switch de red.

- Organización:
    * Es el nodo principal de la jerarquia.
    * Tiene el Billing Account.
    * Los admin. puede acceder a este nodo.
    * Todos los permisos que deban existir en la Organización, se pueden asignar aqui y heredarlos a nodos de abajo.
    * Se asigna un dominio para identificarlo.

- Cloud Identity:
    * En caso de usar Google Workspace (SaaS):
        + Son una forma de autentificar a los usuarios que pertenecen a la organicación.
        + Estos usuarios suelen utilizar Drive, Sheets, Forms, etc...
    
    * Aún sin tener Google Workspace, puedes usarlo para gestionar usuarios hasta un máximo de 50 sin costo.

- Folders:
    * Pueden tener mas folders o un proyecto.
    * Como buena práctica, se debe modelar los departamentos de las compañias.
    * Poder dividir y agrupar en folder te permite:
        + Crear grupos y asignar personas al mismo, a fin de que sólo ese grupo, pueda "manipular" ciertos folders.
        + Discriminar Costos: Saber cuánto me cuesta app1 vs app2.

- Proyectos: Son los que tienen los recursos de GCP.
    * Contiene un grupo de recursos: BD, Contenedores, Alertas, Servicios, Kubernetes, VM, etc...
    * Puedes crear un mega proyecto pero es buena práctica que cada proyecto sólo tenga una necesidad en mente
    * Cada proyecto debe actuar como si fuese un microservicio, es decir, una tarea dedicada.


---------- Identidad y Control de Acceso (IAM) -----------

- Quien: Puede referirse a una persona o un subsistema.
- Puede hacer: Los permisos
- En cuál recurso: 


- Zero Trust / Confianza Cero:
    * Todo lo que esta dentro de un "perimetro" confiamos.
    * Establecemos que apps se puede comunicar con otras apps.
    * Determinamos que recursos pueden generar las apps.

- Politicas de seguridad:
    * Se asignan a los recursos.
    * Se establecen los roles de los miembros.
    * Roles son un conjunto de permisos.
    * Se pueden entender las políticas mejor como:
        "Ciertos miembros tienen ciertos roles sobre este cierto recurso."
    * Se pueden asignar a las jerarquias (organización, folder, proyecto, recurso)
    * Una politica se compone de 2 partes:
        - Roles
        - Miembros:
            * Usuarios individuales
            * Un subsistema
            * Un grupo de miembros
            * Un dominio

- Permisos:
    *Se asignan directamente a los roles, no a los individuos.
    *Los roles no se asignan a personas, si no a grupos.

--- NOTA PERSONAL: ---
La razón de que existan las políticas de seguridad es "complementar" a los roles, es decir,
si bien es cierto que con un rol y permisos ya puedes tener control de lo que los usuarios
o subsistemas pueden hacer en GCP, las políticas de seguridad permiten establecer "condiciones"
en las que el usuario/sistema puede hacer uso de su rol y ejecutar sus permisos. 

Ejemplo:

Si tuviesemos un rol 'Consultar BD', aunque el rol ya define los permisos específicos que el usuario tiene sobre la BD,
las políticas de seguridad nos ayudan a determinar:

    * A qué base de datos específica tiene acceso el usuario.
    * En qué condiciones se pueden realizar las consultas.
    * Otras restricciones adicionales, como la ubicación IP desde la que el usuario puede acceder a la base de datos.


---------- Roles (IAM) -----------

- Buena práctica: SI O SI se deben asignar roles a grupos de usuarios y no a usuarios.

---------- (Imagen Disponible) -----------
- Existen 4 grupos a nivel organización (al menos los de cajón):
    + Org. Admin
    + Network Admin
    + Security Admin
    + Billing Admin


---------- Interacción con GCP -----------

- Todo en GCP es una API, por lo que hay una gran documentación.
- Existen 3 formas tradicionales:
    + Aplicación Web
    + Aplicación Movil
    + CLI para terminal


---------- Google Cloud Marketplace -----------

- Es igual a la app store o google play; es una tienda de apps enfocadas para la nube y para empresas.
- Es de fácil instalación y te permite ahorrar tiempo.
- Los servicios aumque sean de terceros, te vienen en la misma factura de Google Billing
- Los precios son de lista o bien, pueden negociarse con el tercero del servicio.



